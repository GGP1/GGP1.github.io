<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gastón Palomeque</title><link>https://gastonpalomeque.com/</link><description>Recent content on Gastón Palomeque</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 13 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://gastonpalomeque.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Mastering SQL with Go - Part 2</title><link>https://gastonpalomeque.com/posts/mastering_sql_with_go_p2/</link><pubDate>Sun, 13 Apr 2025 00:00:00 +0000</pubDate><guid>https://gastonpalomeque.com/posts/mastering_sql_with_go_p2/</guid><description>&lt;p>This is the part 2 of a series covering &lt;strong>sql&lt;/strong> and &lt;strong>Go&lt;/strong>, this time, we will cover how to work with SQL transactions context and isolation levels, results dynamic scanning, full text search and recursive queries as well as using multiple result sets to do many queries in a single roundtrip.&lt;/p>
&lt;blockquote>
&lt;p>To go to part one, click &lt;a href="../mastering_sql_with_go_p1">here&lt;/a>.&lt;/p>&lt;/blockquote>
&lt;h2 id="transactions">Transactions&lt;/h2>
&lt;p>Let&amp;rsquo;s start with transactions, why are they necessary?&lt;/p>
&lt;p>A transaction is a way for an application to group several reads and writes together into a logical unit.&lt;/p></description></item><item><title>Mastering SQL with Go - Part 1</title><link>https://gastonpalomeque.com/posts/mastering_sql_with_go_p1/</link><pubDate>Sun, 24 Nov 2024 00:00:00 +0000</pubDate><guid>https://gastonpalomeque.com/posts/mastering_sql_with_go_p1/</guid><description>&lt;p>I found myself using SQL a lot in one of my projects and I have learnt many things while trying to solve the problems I encountered.&lt;/p>
&lt;p>This post is the part one of a series where I will try to show how to manage data in a relational database using SQL (Postgre syntax), Go and its standard library package &lt;a href="https://github.com/golang/go/tree/master/src/database/sql">&lt;code>database/sql&lt;/code>&lt;/a>.&lt;/p>
&lt;p>Explaining absolutely everything would require an entire book so I will skip the subjects that most articles already cover (connection establishment, foreign keys, parameterized arguments, etc).&lt;/p></description></item><item><title>Applications containerization</title><link>https://gastonpalomeque.com/posts/applications_containerization/</link><pubDate>Fri, 20 Oct 2023 00:00:00 +0000</pubDate><guid>https://gastonpalomeque.com/posts/applications_containerization/</guid><description>&lt;p>The concept of containerization was first introduced in 1979 during the development of &lt;a href="https://en.wikipedia.org/wiki/Chroot">chroot&lt;/a> (Version 7 Unix), which restricted an application&amp;rsquo;s file access to a specific directory - the root - and its children.&lt;/p>
&lt;p>The main benefit chroot brought in was &lt;strong>process isolation&lt;/strong>, improving the system security such that an internal vulnerability wouldn&amp;rsquo;t affect external systems.&lt;/p>
&lt;p>In fact, chroot was the first of a series of technologies designed to protect each process from the others on the operating system.&lt;/p></description></item><item><title>Protect your information</title><link>https://gastonpalomeque.com/posts/protect_your_information/</link><pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate><guid>https://gastonpalomeque.com/posts/protect_your_information/</guid><description>&lt;p>Every day we are more connected with our devices, we use them to share information, store capital, buy products, work, learn, for entertainment; basically anything.&lt;/p>
&lt;p>Along with these services come our accounts, that hold and will hold more value than ever as the time goes by.&lt;/p>
&lt;p>There&amp;rsquo;s no doubt we need them safe. In this article, I will try to help you &lt;strong>protect your information&lt;/strong>.&lt;/p>
&lt;h2 id="passwords">Passwords&lt;/h2>
&lt;p>Passwords are the &lt;strong>most critical part of every system security&lt;/strong>, they are the key that protect very sensitive information so it&amp;rsquo;s specially important to understand how to manage them carefully.&lt;/p></description></item><item><title>React Native generic list</title><link>https://gastonpalomeque.com/posts/rn_generic_list/</link><pubDate>Sat, 11 Dec 2021 00:00:00 +0000</pubDate><guid>https://gastonpalomeque.com/posts/rn_generic_list/</guid><description>&lt;p>React Native&amp;rsquo;s &lt;em>FlatList&lt;/em> is a component that supports many cool features while being simple and easy to use, it&amp;rsquo;s a good example of a well-designed piece of software and that&amp;rsquo;s why I decided to take it a step further.&lt;/p>
&lt;p>For that, I&amp;rsquo;ve developed a generic list built on top of it that handles &lt;strong>pagination&lt;/strong> and &lt;strong>refreshing&lt;/strong> internally, reducing a &lt;em>lot&lt;/em> of repetitive code from my previous implementation.&lt;/p>
&lt;p>I looked for something like this online but couldn&amp;rsquo;t find anything similar, even though it might be useful for many people, so I decided to share it.&lt;/p></description></item><item><title>The new monetary standard</title><link>https://gastonpalomeque.com/posts/new_monetary_standard/</link><pubDate>Tue, 06 Jul 2021 00:00:00 +0000</pubDate><guid>https://gastonpalomeque.com/posts/new_monetary_standard/</guid><description>&lt;p>The stability of modern monetary systems depends on people&amp;rsquo;s trust on the governments and institutions that rule them.&lt;/p>
&lt;p>Central banks impose the currencies used and arbitrarily control money supply and interest rates. Their negligent manipulation have caused inflation and hiperinflation crises all over the world, driving people to look for better ways of storing their capital to protect it from money debasement.&lt;/p>
&lt;p>The search for a solution along with the advances in computer science and cryptography led to the creation of a decentralized virtual system that does not require to trust on a third party to exchange assets in a secure, transparent and reliable manner. This system is called &lt;strong>Bitcoin&lt;/strong>.&lt;/p></description></item></channel></rss>